IMPORT script/globals.b

CONST __initial_stage_size 5

STRUCT stageObject {
        x
        y
        w
        h
}


PRIVATE p_activeStage
PRIVATE p_copyContainer
PRIVATE ps_stageSize
PRIVATE p_extern



FUNC s_createStage {
        ALLOC #__initial_stage_size $argReg0
        SET &ps_stageSize *argReg0
        SET &p_activeStage *argReg0
        SET &p_extern $argReg0

        SET $ps_stageSize 1
}

/ Resizes the active stage to add 1 element (uses p_copyContainer). Initializes data
  to whatever is passed into f_addElement. /
FUNC s_addElement {
        CONST new_x $argReg0
        CONST new_y $argReg1
        CONST new_w $argReg2
        CONST new_h $argReg3


        SET &mathReg1 *ps_stageSize
        INC &mathReg1
        MUL $mathReg1 4 &mathReg0
        INC &mathReg0

        ALLOC $mathReg0 &p_copyContainer
        MUL *ps_stageSize 4 &mathReg0
        INC &mathReg0

        COPY $p_activeStage $mathReg0 $p_copyContainer

        MUL *ps_stageSize 4 &mathReg2
        INC &mathReg2

        ASSIGN stageObject p_copyContainer
        INDEX &p_copyContainer $mathReg2
                SET $p_copyContainer.x #new_x
                SET $p_copyContainer.y #new_y
                SET $p_copyContainer.w #new_w
                SET $p_copyContainer.h #new_h

        / Once copied, reset everything. /

        INDEX &p_copyContainer 0

        FREE $p_activeStage

        SET &p_activeStage $p_copyContainer
        SET &ps_stageSize $p_copyContainer
        SET $p_extern $p_copyContainer

        SET $ps_stageSize $mathReg1
}



FUNC s_setActiveStage {
        SET &p_activeStage *argReg0
        SET &p_extern $argReg0
}

FUNC s_getWorkingStage {
        SET $argReg0 $p_activeStage
}


MACRO f_createStage {
        SET &argReg0 #ar0
        %s_createStage
}

MACRO f_addElement {
        SET &argReg0 #ar0
        SET &argReg1 #ar1
        SET &argReg2 #ar2
        SET &argReg3 #ar3
        %s_addElement
}

MACRO f_setActiveStage {
        SET &argReg0 #ar0
        %s_setActiveStage
}

MACRO f_exportStage {
        DFILE_WRITE #ar0 #ar1
}

MACRO f_importStage {
        DFILE_READ #ar0 #ar1
}

MACRO f_getWorkingStage {
        SET &argReg0 #ar0
        %s_getWorkingStage
}

EXIT